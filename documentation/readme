              Proyecto Final ALP
              ------------------


 INTRO
 El proyeto llevado a cabo es una implementación del lenguaje SQL (Structured Query Language), el cual permite crear, modificar y eliminar bases de datos relacionales (conjuntos de datos persistentes pertenecientes a un mismo contexto)  y a la vez permite hacer consultas sobre las mismas. Las BD SQL, como se las suele denominar, han jugado un rol fundamental en el paso de los años en el desarrollo de empresas, ya que proveen mecanismos automatizados para el almacen y la consulta de los datos pertinentes a las empresas, además de asegurar la consistencia y seguridad de los mismos.
 Hoy en día encontramos otro tipo de BD denominadas NoSQL (Not Only SQL) usadas principalmente por las redes sociales y  para el procesamiento de grandes volúmenes de datos, para los cuales los estructuras tradicionales de almacenamiento y consulta enfrentan problemas de escalabilidad y rendimiento. Las BD NoSQL no usan el modelo relacional (o a lo sumo lo usan como apoyo) sino que se sirven de otras estructuras como los que proveen las tablas hash, los documentos, los grafos y la orientación a objetos.
 Elegí implementar un SGBD (Sistema Gestor de Base de Datos) que utiliza el modelo relacional para aprender sobre su funcionamiento interno y porque ofrece una sintaxis sencilla (aunque muy flexible) que permite operar a trávez del álgebra relacional y el cálculo de dominio de tuplas. El SGBD permite que cada usuario cree y administre sus bases de datos. Para modelar una BD 
 El alcance de este proyecto fue representar las operaciones básicas que proporciona el estándar de SQL. Con este fin, separaremos el lenguaje en 2 partes : DDL (lenguaje de diseño de datos) y DML (lenguaje de manejo de datos). Habrá una tercera parte, MUL (Lenguaje de Manejo de Usuario) con operaciones básicas para crear un usuario ,acceder a él o eliminarlo. Además una operación denominada SOURCE, nos permitirá leer archivos fuentes escritos en sintaxis SQL para escapar a las limitaciones que ofrece una terminal.


DISEÑO
 El primer obstáculo fue realizar un AST (abstract sintax tree) que brindara la flexibilidad que ofrece SQL. El mismo se encuentra en el archivo AST.h.
Este archivo contiene tanto el AST utilizado como otras definiciones que ayudaron a la programación del intérprete.
 El segundo obstáculo fue encontrar estructuras apropiadas para la representación tanto de las bases de datos como de los usuarios, tablas y registros. Se utilizaron árboles AVL para la representación de las tablas y hashmaps para representar registros. Los árboles AVL tiene un buen tiempo de 



PROBLEMAS
Decidi no permitir la actualización de claves por motivos de performance.
